/*
 * API V1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiV1OwntracksPointsPostRequest {
    #[serde(rename = "batt", skip_serializing_if = "Option::is_none")]
    pub batt: Option<f64>,
    #[serde(rename = "lon", skip_serializing_if = "Option::is_none")]
    pub lon: Option<f64>,
    #[serde(rename = "acc", skip_serializing_if = "Option::is_none")]
    pub acc: Option<f64>,
    #[serde(rename = "bs", skip_serializing_if = "Option::is_none")]
    pub bs: Option<f64>,
    #[serde(rename = "inrids", skip_serializing_if = "Option::is_none")]
    pub inrids: Option<Vec<String>>,
    #[serde(rename = "BSSID", skip_serializing_if = "Option::is_none")]
    pub bssid: Option<String>,
    #[serde(rename = "SSID", skip_serializing_if = "Option::is_none")]
    pub ssid: Option<String>,
    #[serde(rename = "vac", skip_serializing_if = "Option::is_none")]
    pub vac: Option<f64>,
    #[serde(rename = "inregions", skip_serializing_if = "Option::is_none")]
    pub inregions: Option<Vec<String>>,
    #[serde(rename = "lat", skip_serializing_if = "Option::is_none")]
    pub lat: Option<f64>,
    #[serde(rename = "topic", skip_serializing_if = "Option::is_none")]
    pub topic: Option<String>,
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<String>,
    #[serde(rename = "conn", skip_serializing_if = "Option::is_none")]
    pub conn: Option<String>,
    #[serde(rename = "m", skip_serializing_if = "Option::is_none")]
    pub m: Option<f64>,
    #[serde(rename = "tst", skip_serializing_if = "Option::is_none")]
    pub tst: Option<f64>,
    #[serde(rename = "alt", skip_serializing_if = "Option::is_none")]
    pub alt: Option<f64>,
    #[serde(rename = "_type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "tid", skip_serializing_if = "Option::is_none")]
    pub tid: Option<String>,
    #[serde(rename = "_http", skip_serializing_if = "Option::is_none")]
    pub _http: Option<bool>,
    #[serde(rename = "ghash", skip_serializing_if = "Option::is_none")]
    pub ghash: Option<String>,
    #[serde(rename = "isorcv", skip_serializing_if = "Option::is_none")]
    pub isorcv: Option<String>,
    #[serde(rename = "isotst", skip_serializing_if = "Option::is_none")]
    pub isotst: Option<String>,
    #[serde(rename = "disptst", skip_serializing_if = "Option::is_none")]
    pub disptst: Option<String>,
}

impl ApiV1OwntracksPointsPostRequest {
    pub fn new() -> ApiV1OwntracksPointsPostRequest {
        ApiV1OwntracksPointsPostRequest {
            batt: None,
            lon: None,
            acc: None,
            bs: None,
            inrids: None,
            bssid: None,
            ssid: None,
            vac: None,
            inregions: None,
            lat: None,
            topic: None,
            t: None,
            conn: None,
            m: None,
            tst: None,
            alt: None,
            _type: None,
            tid: None,
            _http: None,
            ghash: None,
            isorcv: None,
            isotst: None,
            disptst: None,
        }
    }
}

